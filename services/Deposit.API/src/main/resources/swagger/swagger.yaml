openapi: 3.0.0
info:
  title: o-bank Desposit API
  description: Deposit REST API for o-bank. This API has whole operations about customers different typed deposit accounts.<br>Developed in Java (Spring Boot)
  version: 1.0.0
  contact:
    name: Onur Ã–ZEL
    url: https://github.com/onur-ozel/o-bank
    email: onurozel41@gmail.com
  license:
    name: MIT License
    url: https://github.com/onur-ozel/o-bank/blob/master/LICENSE
tags:
  - name: Withdraw Deposit Account
    description: Operations about withdraw deposit account
paths:
  /deposit/api/v1/withdraw-deposit-accounts:
    get:
      tags:
        - Withdraw Deposit Account
      summary: Gets Withdraw Deposit Accounts
      description: Paging, sorting, searching and field filtering can be provided with query parameters.
      parameters:
        - $ref: '#components/parameters/limit'
          example: test
        - $ref: '#components/parameters/offset'
        - $ref: '#components/parameters/sorts'
        - $ref: '#components/parameters/fields'
        - $ref: '#components/parameters/searches'        
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WithdrawDepositAccount'
        400:
          $ref: '#/components/responses/400InvalidRequest'
        404:
          $ref: '#/components/responses/404NotFound'
    post:
      tags:
        - Withdraw Deposit Account
      summary: Creates new Withdraw Deposit Account
      description: Id and account number is generated in api.
      requestBody:
        description: Account object that will be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawDepositAccount'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawDepositAccount'
        400:
          $ref: '#/components/responses/400InvalidRequest'
        404:
          $ref: '#/components/responses/404NotFound'
    put:
      tags:
        - Withdraw Deposit Account
      summary: Update an existing account.
      description: Id field must be filled. customerNumber and accountNumber cannot be modified.
      requestBody:
        description: Account object that needs to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawDepositAccount'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
        400:
          $ref: '#/components/responses/400InvalidRequest'
        404:
          $ref: '#/components/responses/404NotFound'
  /deposit/api/v1/withdraw-deposit-accounts/{id}:
    delete:
      tags:
        - Withdraw Deposit Account
      summary: Deletes an existing account by id.
      parameters:
        - $ref: '#components/parameters/id'
      responses:
        200:
          description: successful operation
          content: {}
        400:
          $ref: '#/components/responses/400InvalidRequest'
        404:
          $ref: '#/components/responses/404NotFound'        
    get:
      tags:
        - Withdraw Deposit Account
      summary: Get withdraw deposit account by id.
      parameters:
        - $ref: '#components/parameters/id'      
      responses:
        200:
          description: successful operation
          content: {}
        400:
          $ref: '#/components/responses/400InvalidRequest'
        404:
          $ref: '#/components/responses/404NotFound'        
components:
  schemas:
    RequestError:
      type: object
      properties:
        code:
          type: string
          description: Error code.
          example: 12345
        message:
          type: string
          description: User friendly error message.
          example: Invalid field name used in searching.
        stackTrace:
          type: string
          description: Error stack trace. It can be null for securtiy reasons.
        help:
          type: string
          description: Help url or instructions for taken error.
    DepositAccount:
      type: object
      properties:
        id:
          type: string
          description: Guid id.
          example: be5d9875-38d9-43be-86e7-9117ff3385d1
        customerNumber:
          type: integer
          format: int64
          description: Accounts owner customer number.
          example: 123456789
        accountNumber:
          type: integer
          format: int64
          description: Account number.
          example: 123456789
        balance:
          type: number
          format: double
          description: Account balance.
          example: 217.15
    WithdrawDepositAccount:
      allOf:
        - $ref: '#/components/schemas/DepositAccount'
        - type: object
          properties:
            overDraftLimit:
              type: number
              format: double
              description: Account overdraft credit limit.
              example: 100.50
  parameters:
    limit:
      name: limit
      in: query
      description: Limits return data count.
      required: false
      allowEmptyValue: true
      style: form
      explode: true
      example: 10
      schema:
        type: integer
        format: int32
        minimum: 1
    offset:
      name: offset
      in: query
      description: Offset data value.
      required: false
      allowEmptyValue: true
      style: form
      explode: true
      example: 0
      schema:
        type: integer
        format: int32
        minimum: 0
    sorts:
      name: sorts
      in: query
      description: Sort by columns. Multiple column can be provided by comma seperated. Use + for desc - for asc.
      required: false
      allowEmptyValue: true
      style: form
      explode: true
      example: +id,-overDraftLimit
      schema:
        type: string
    fields:
      name: fields
      in: query
      description: Filters result data with given field names. Multiple column can be provided by comma seperated.
      required: false
      allowEmptyValue: true
      style: form
      example: id,overDraftLimit
      schema:
        type: string
    searches:
      name: searches
      in: query
      description: Searches data with given conditions. Multiple column can be provided by comma seperated.<br>Operators can be used =, !=, >, <, >=, <=, % (like), !% (notlike), ^% (ends with), %^ (starts with), !^% (not ends with), !%^ (not starts with)
      required: false
      allowEmptyValue: true
      style: form
      example: balance[>=]250,overDraftLimit[<]500
      schema:
        type: string        
    id:
      name: id
      in: path
      description: Unique account id.
      required: true
      schema:
        type: string
        description: Guid id.
        example: be5d9875-38d9-43be-86e7-9117ff3385d1
  responses:
    404NotFound:
      description: The specified resource was not found.
      content: {}
    400InvalidRequest:
      description: Invalid request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestError'
